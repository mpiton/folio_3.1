---
interface Props {
    id?: string;
    type?: 'success' | 'error' | 'warning' | 'info';
    title?: string;
    message: string;
    showCloseButton?: boolean;
}

const { id, type = 'info', title, message, showCloseButton = false } = Astro.props;

const icons = {
    success: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>`,
    error: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>`,
    warning: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>`,
    info: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>`
};
---

<div class="toast" data-type={type} role="alert">
    <div class="toast-icon" set:html={icons[type]} />
    <div class="toast-content">
        {title && <h3 class="toast-title">{title}</h3>}
        <p class="toast-message">{message}</p>
    </div>
    {showCloseButton && <button class="toast-close" aria-label="Fermer">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
    </button>}
</div>

<style>
    .toast {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        border-radius: 0.5rem;
        background: white;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        width: 400px;
        max-width: calc(100vw - 2rem);
        position: relative;
        border-left: 4px solid;
    }

    .toast[data-type="success"] {
        border-color: #10B981;
        background-color: #ECFDF5;
    }

    .toast[data-type="error"] {
        border-color: #EF4444;
        background-color: #FEF2F2;
    }

    .toast[data-type="warning"] {
        border-color: #F59E0B;
        background-color: #FFFBEB;
    }

    .toast[data-type="info"] {
        border-color: #3B82F6;
        background-color: #EFF6FF;
    }

    .toast-icon {
        flex-shrink: 0;
        width: 24px;
        height: 24px;
    }

    .toast[data-type="success"] .toast-icon { color: #10B981; }
    .toast[data-type="error"] .toast-icon { color: #EF4444; }
    .toast[data-type="warning"] .toast-icon { color: #F59E0B; }
    .toast[data-type="info"] .toast-icon { color: #3B82F6; }

    .toast-content {
        flex-grow: 1;
        min-width: 0;
    }

    .toast-title {
        margin: 0 0 0.25rem;
        font-size: 1rem;
        font-weight: 600;
        color: #1F2937;
    }

    .toast-message {
        margin: 0;
        font-size: 0.875rem;
        line-height: 1.5;
        color: #4B5563;
    }

    .toast-close {
        flex-shrink: 0;
        width: 24px;
        height: 24px;
        padding: 0;
        background: none;
        border: none;
        color: #9CA3AF;
        cursor: pointer;
        transition: color 0.2s;
    }

    .toast-close:hover {
        color: #4B5563;
    }
</style>
