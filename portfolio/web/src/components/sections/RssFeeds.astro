---
import RssCard from "../common/RssCard.astro";

interface RssItem {
    title: string;
    description: string;
    link: string;
    pubDate: Date;
    imageUrl: string;
}

interface Props {
    items: RssItem[];
}

const { items } = Astro.props;
---

<section class="px-4 py-8 md:py-12">
    <div class="max-w-7xl mx-auto">
        <div
            class="articles-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12"
        >
            {items.map((item) => <RssCard {...item} />)}
        </div>
        <button
            class="block mx-auto px-8 py-4 text-lg font-semibold bg-primary hover:bg-primary-dark text-accent rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
            id="loadMore"
        >
            Charger plus d'articles
        </button>
    </div>
</section>

<script>
    const loadMoreBtn = document.getElementById("loadMore");
    if (loadMoreBtn) {
        loadMoreBtn.addEventListener("click", async () => {
            try {
                // TODO: Implémenter la logique de chargement des articles supplémentaires
                const response = await fetch("/api/rss?page=2");
                if (!response.ok)
                    throw new Error("Erreur lors du chargement des articles");

                const newItems = await response.json();
                // TODO: Ajouter les nouveaux articles au conteneur
            } catch (error) {
                console.error("Erreur:", error);
                // TODO: Afficher un message d'erreur à l'utilisateur
            }
        });
    }
</script>
