---
import favicon from "../assets/favicon.webp";
import "@fortawesome/fontawesome-free/css/all.min.css";
import "../styles/global.css";
import type { SEOProps } from '../utils/seo';
import Header from "../components/layout/Header.astro";
import Footer from "../components/layout/Footer.astro";
import PWAManager from '../components/common/PWAManager.astro';

interface Props {
  seo: SEOProps;
  title?: string;
}

const { seo, title: pageTitle } = Astro.props;
const { description, openGraph } = seo;

export let title: Props['title'];
---

<!doctype html>
<html lang="fr">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/webp" href={favicon.src} />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&family=Poppins:wght@400;600;700&display=swap" rel="stylesheet" />
        <title>{pageTitle ?? seo.title}</title>

        <!-- OpenGraph tags -->
        <meta property="og:title" content={pageTitle ?? seo.title} />
        <meta property="og:description" content={description} />
        {
            openGraph?.type && (
                <meta property="og:type" content={openGraph.type} />
            )
        }
        {
            openGraph?.locale && (
                <meta property="og:locale" content={openGraph.locale} />
            )
        }
        {openGraph?.url && <meta property="og:url" content={openGraph.url} />}
        {
            openGraph?.site_name && (
                <meta property="og:site_name" content={openGraph.site_name} />
            )
        }
    </head>
    <body>
        <Header />
        <main>
            <slot />
        </main>
        <Footer />
        <PWAManager />
    </body>
</html>

<script>
    // Gestion du changement de style du header au défilement
    const header = document.getElementById("main-header");
    const scrollThreshold = 100; // Seuil de défilement en pixels

    function updateHeaderStyle() {
        if (window.scrollY > scrollThreshold) {
            header?.classList.add("scrolled");
        } else {
            header?.classList.remove("scrolled");
        }
    }

    window.addEventListener("scroll", updateHeaderStyle);
    updateHeaderStyle(); // Appel initial
</script>
