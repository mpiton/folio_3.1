---
import Layout from "../layouts/Layout.astro";
import Button from "../components/common/Button.astro";
import Card from "../components/common/Card.astro";
import Input from "../components/common/Input.astro";
import Modal from "../components/common/Modal.astro";
import Loader from "../components/common/Loader.astro";
import Pagination from "../components/common/Pagination.astro";
import { defaultSEO } from "../utils/seo";

const seoData = {
    ...defaultSEO,
    title: "Components | Portfolio",
    description: "Components page of my portfolio"
};
---

<Layout seo={seoData}>
    <main class="container my-12">
        <h1>Documentation des Composants</h1>

        <section class="section">
            <h2>Boutons</h2>
            <div class="component-grid">
                <Card>
                    <h3>Variantes</h3>
                    <div class="button-group">
                        <Button>Primary</Button>
                        <Button variant="secondary">Secondary</Button>
                        <Button variant="outline">Outline</Button>
                        <Button variant="ghost">Ghost</Button>
                    </div>
                </Card>

                <Card>
                    <h3>Tailles</h3>
                    <div class="button-group">
                        <Button size="sm">Small</Button>
                        <Button size="md" data-testid="mediumButton"
                            >Medium</Button
                        >
                        <Button size="lg">Large</Button>
                    </div>
                </Card>

                <Card>
                    <h3>États</h3>
                    <div class="button-group">
                        <Button>Normal</Button>
                        <Button disabled>Désactivé</Button>
                    </div>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Cartes</h2>
            <div class="component-grid" data-testid="cards-section">
                <Card variant="default" data-testid="card-default">
                    <h3>Card Default</h3>
                    <p>Une carte avec un style par défaut.</p>
                </Card>

                <Card variant="elevated" data-testid="card-elevated">
                    <h3>Card Elevated</h3>
                    <p>Une carte avec une ombre plus prononcée.</p>
                </Card>

                <Card variant="bordered" data-testid="card-bordered">
                    <h3>Card Bordered</h3>
                    <p>Une carte avec une bordure visible.</p>
                </Card>

                <Card interactive data-testid="card-interactive">
                    <h3>Card Interactive</h3>
                    <p>Une carte avec des effets au survol.</p>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Champs de formulaire</h2>
            <div class="component-grid">
                <Card>
                    <h3>Types de base</h3>
                    <div class="input-group">
                        <Input
                            type="text"
                            name="text"
                            label="Texte"
                            placeholder="Entrez du texte"
                        />
                        <Input
                            type="email"
                            name="email"
                            label="Email"
                            placeholder="exemple@email.com"
                            required
                        />
                        <Input
                            type="password"
                            name="password"
                            label="Mot de passe"
                            placeholder="••••••••"
                        />
                    </div>
                </Card>

                <Card>
                    <h3>États et validation</h3>
                    <div class="input-group">
                        <Input
                            type="text"
                            name="required"
                            label="Champ requis"
                            required
                            placeholder="Ce champ est obligatoire"
                        />
                        <Input
                            type="text"
                            name="error"
                            label="Avec erreur"
                            error="Ce champ contient une erreur"
                            value="Valeur incorrecte"
                        />
                    </div>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Modales</h2>
            <div class="component-grid">
                <Card>
                    <h3>Tailles de Modal</h3>
                    <div class="button-group">
                        <Button
                            variant="primary"
                            id="openSmallModal"
                            data-testid="openSmallModal">Small Modal</Button
                        >
                        <Button
                            variant="primary"
                            id="openMediumModal"
                            data-testid="openMediumModal">Medium Modal</Button
                        >
                        <Button
                            variant="primary"
                            id="openLargeModal"
                            data-testid="openLargeModal">Large Modal</Button
                        >
                    </div>

                    <Modal id="smallModal" size="sm" title="Small Modal">
                        <p>Ceci est une petite modale.</p>
                    </Modal>

                    <Modal id="mediumModal" size="md" title="Medium Modal">
                        <p>Ceci est une modale de taille moyenne.</p>
                    </Modal>

                    <Modal id="largeModal" size="lg" title="Large Modal">
                        <p>
                            Ceci est une grande modale avec beaucoup de contenu
                            possible.
                        </p>
                    </Modal>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Notifications</h2>
            <div class="component-grid">
                <Card>
                    <h3>Types de Toast</h3>
                    <div class="button-group">
                        <button data-testid="showSuccessToast" class="px-4 py-2 bg-green-500 text-white rounded">
                            Success Toast
                        </button>
                        <button data-testid="showErrorToast" class="px-4 py-2 bg-red-500 text-white rounded">
                            Error Toast
                        </button>
                        <button data-testid="showWarningToast" class="px-4 py-2 bg-yellow-500 text-white rounded">
                            Warning Toast
                        </button>
                        <button data-testid="showInfoToast" class="px-4 py-2 bg-blue-500 text-white rounded">
                            Info Toast
                        </button>
                    </div>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Loaders</h2>
            <div class="component-grid">
                <Card>
                    <h3>Types de Loader</h3>
                    <div class="loader-group">
                        <Loader variant="spinner" label="Chargement spinner" />
                        <Loader variant="dots" label="Chargement points" />
                        <Loader variant="pulse" label="Chargement pulse" />
                    </div>
                </Card>

                <Card>
                    <h3>Tailles de Loader</h3>
                    <div class="loader-group">
                        <Loader size="sm" label="Petit loader" />
                        <Loader size="md" label="Loader moyen" />
                        <Loader size="lg" label="Grand loader" />
                    </div>
                </Card>

                <Card>
                    <h3>Couleurs de Loader</h3>
                    <div class="loader-group">
                        <Loader
                            color="var(--primary-color)"
                            label="Loader primaire"
                        />
                        <Loader color="#EF4444" label="Loader rouge" />
                        <Loader color="#3B82F6" label="Loader bleu" />
                    </div>
                </Card>
            </div>
        </section>

        <section class="section">
            <h2>Pagination</h2>
            <div class="pagination-examples">
                <Card padding="lg">
                    <h3>Pagination simple</h3>
                    <div class="pagination-wrapper">
                        <Pagination
                            currentPage={1}
                            totalPages={5}
                            baseUrl="#"
                        />
                    </div>
                </Card>

                <Card padding="lg">
                    <h3>Pagination avec ellipsis</h3>
                    <div class="pagination-wrapper">
                        <Pagination
                            currentPage={5}
                            totalPages={10}
                            baseUrl="#"
                        />
                    </div>
                </Card>

                <Card padding="lg">
                    <h3>Pagination active</h3>
                    <div class="pagination-wrapper">
                        <Pagination
                            currentPage={3}
                            totalPages={5}
                            baseUrl="#"
                        />
                    </div>
                </Card>
            </div>
        </section>
    </main>
</Layout>

<!-- Toast container -->
<div id="toastContainer" class="toast-container"></div>

<script>
    import { ToastManager, defaultMessages, type ToastOptions } from "../scripts/ToastManager";

    // Initialiser le gestionnaire de toast
    const toastManager = ToastManager.getInstance();

    // Ajouter les écouteurs d'événements
    document.addEventListener('DOMContentLoaded', () => {
        const buttons = document.querySelectorAll<HTMLButtonElement>('[data-testid^="show"][data-testid$="Toast"]');
        
        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const type = button.getAttribute('data-testid')
                    ?.replace('show', '')
                    .replace('Toast', '')
                    .toLowerCase();

                if (type && type in defaultMessages) {
                    const messageData = defaultMessages[type];
                    const event = new CustomEvent<ToastOptions>('showToast', {
                        detail: {
                            type: type as ToastOptions['type'],
                            title: messageData.title,
                            message: messageData.message,
                            duration: 5000
                        }
                    });
                    document.dispatchEvent(event);
                }
            });
        });
    });
</script>

<style is:global>
    :root {
        --primary-color: #578e7e;
        --secondary-color: #f5ecd5;
        --accent-color: #fffaec;
        --text-color: #3d3d3d;
    }

    main {
        padding: 0;
        max-width: 100%;
        margin: 0 auto;
        background-color: var(--accent-color);
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    h1 {
        font-size: 2.5rem;
        margin-bottom: 2rem;
        color: var(--primary-color);
        font-family: "Poppins", sans-serif;
        text-align: center;
    }

    .section {
        margin-bottom: 3rem;
    }

    h2 {
        font-size: 1.875rem;
        margin-bottom: 1.5rem;
        color: var(--primary-color);
        font-family: "Poppins", sans-serif;
        text-align: center;
    }

    h3 {
        font-size: 1.25rem;
        margin-bottom: 1rem;
        color: var(--text-color);
        font-family: "Poppins", sans-serif;
    }

    p {
        color: var(--text-color);
        line-height: 1.6;
    }

    .component-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 1rem;
    }

    .button-group {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .input-group {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .loader-group {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        align-items: center;
    }

    .pagination-examples {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .pagination-wrapper {
        max-width: 100%;
        overflow-x: auto;
    }

    .toast-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
        pointer-events: none;
    }

    .toast {
        background: white;
        border-radius: 8px;
        padding: 16px;
        width: 300px;
        margin-top: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: flex-start;
        gap: 12px;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
        pointer-events: auto;
    }

    .toast--visible {
        transform: translateX(0);
    }

    .toast[data-type="success"] { border-left: 4px solid #10B981; }
    .toast[data-type="error"] { border-left: 4px solid #EF4444; }
    .toast[data-type="warning"] { border-left: 4px solid #F59E0B; }
    .toast[data-type="info"] { border-left: 4px solid #3B82F6; }

    .toast-icon {
        flex-shrink: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .toast-content {
        flex-grow: 1;
    }

    .toast-title {
        margin: 0 0 4px;
        font-weight: 600;
    }

    .toast-message {
        margin: 0;
        font-size: 14px;
    }

    .toast-close {
        padding: 4px;
        background: none;
        border: none;
        cursor: pointer;
        opacity: 0.5;
    }

    .toast-close:hover {
        opacity: 1;
    }
</style>
