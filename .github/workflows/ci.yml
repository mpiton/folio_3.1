name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MONGO_USER: ${{ secrets.MONGO_USER }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  MONGO_DB: ${{ secrets.MONGO_DB }}
  MONGO_URL: ${{ secrets.MONGO_URL }}
  MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
  MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  BACKUP_DIR: ${{ secrets.BACKUP_DIR }}
  RETENTION_DAYS: ${{ secrets.RETENTION_DAYS }}
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
  SENDER_NAME: ${{ secrets.SENDER_NAME }}
  SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
  HOST: ${{ secrets.HOST }}
  PORT: ${{ secrets.PORT }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0-rc
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_INITDB_ROOT_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_INITDB_DATABASE }}
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval "db.adminCommand('ping')"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          portfolio/api/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: |
        cd portfolio/api
        cargo fmt --all -- --check

    - name: Run clippy
      run: |
        cd portfolio/api
        cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: |
        cd portfolio/api
        cargo build --verbose

    - name: Run tests
      run: |
        cd portfolio/api
        cargo test --verbose -- --test-threads=1
